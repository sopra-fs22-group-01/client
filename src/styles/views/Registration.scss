@import 'styles/theme';

.registration {
  /* component to for the text with the link to the registration page */
  &.registrationText{
    margin-top: 15px;
    text-align: center;
  }


  /* Since Link get's transpiled to an <a>, you can use css to style all <a> and change all links color  and text alligns*/
  a{
    color: $textColor;
  }
  a:hover {
    color: grey;
  }

  &.container {
    margin-top: 10em;
    min-height: 300px;
    /* we include the center mixin defined in _theme.scss and save three duplicate lines :) */
    @include center;
    flex-direction: column;
    background-color: $background;
  }

  /*this values define the black box around the username and password field*/
  &.form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 60%;
    max-width: 30em;
    height: 25em;
    font-size: 1em;
    font-weight: 300;
    padding-left: 37px;
    padding-right: 37px;
    border-radius: 0.75em;
    background-color: transparent;
    transition: opacity 0.5s ease, transform 0.5s ease;
    box-shadow: $dropShadow;
    text-align: left;
  }

  /*this is the field from  login field defined in login.js as template on top of the file*/
  &.field {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /*this values define the two input fields for username and password*/
  &.input {
    height: 3em;
    padding-left: 15px;
    margin-left: -4px;
    border: none;
    border-radius: 0.7em;
    margin-bottom: 20px;
    background: white;
    color: black;
    font-weight: bold;
  }

  /*this values define the labels (the texts "Username" and "Password")*/
  &.label {
    color: $textColor;
    margin-bottom: 10px;
    text-transform: capitalize;
    font-weight: bold;
    font-size: 1.5em;
  }

  /*this values define the position of the login button bc it is inside the button-container*/
  &.button-container {
    display: flex;
    justify-content: center;
    margin-top: 2em;
  }
}